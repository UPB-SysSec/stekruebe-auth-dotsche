Listen 443
{% if strictType=="default" %}
SSLStrictSNIVHostCheck on
{% endif %}

{%- if defaultSite=="siteA" %}
<VirtualHost *:443>
    DocumentRoot "/srv/siteA"
    ServerName {% if not isSubdomain %}siteA.org{% else %}siteA.site.org{% endif %}

    SSLEngine on
    #SSLProtocol -all +TLSv1.2 +TLSv1.3
    SSLCertificateFile /keys/{% if not isSubdomain %}siteA.crt{% else %}subdomainA.crt{% endif %}
    SSLCertificateKeyFile /keys/siteA.key

    {%- if isCertA %}

    # the client cert authority
    SSLCACertificateFile /keys/user_ca_a.crt
    SSLVerifyClient require
    {%- endif %}

    <Directory /srv/siteA>
        AllowOverride none
        Require all granted
    </Directory>
</VirtualHost>
{%- endif %}

<VirtualHost *:443>
    DocumentRoot "/srv/siteB"
    ServerName {% if not isSubdomain %}siteB.org{% else %}siteB.site.org{% endif %}

    SSLEngine on
    #SSLProtocol -all +TLSv1.2 +TLSv1.3
    SSLCertificateFile /keys/{% if not isSubdomain %}siteB.crt{% else %}subdomainB.crt{% endif %}
    SSLCertificateKeyFile /keys/siteB.key

    # the client cert authority
    SSLCACertificateFile /keys/user_ca_b.crt
    SSLVerifyClient require

    <Directory /srv/siteB>
        AllowOverride none
        Require all granted
    </Directory>
</VirtualHost>

{%- if not defaultSite=="siteA" %}
<VirtualHost *:443>
    DocumentRoot "/srv/siteA"
    ServerName {% if not isSubdomain %}siteA.org{% else %}siteA.site.org{% endif %}

    SSLEngine on
    #SSLProtocol -all +TLSv1.2 +TLSv1.3
    SSLCertificateFile /keys/{% if not isSubdomain %}siteA.crt{% else %}subdomainA.crt{% endif %}
    SSLCertificateKeyFile /keys/siteA.key

    {%- if isCertA %}

    # the client cert authority
    SSLCACertificateFile /keys/user_ca_a.crt
    SSLVerifyClient require
    {%- endif %}

    <Directory /srv/siteA>
        AllowOverride none
        Require all granted
    </Directory>
</VirtualHost>
{%- endif %}